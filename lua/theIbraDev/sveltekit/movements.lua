-- local M = {}
--
-- -- Helper function to get the current buffer's file path
-- local function get_current_file()
--     return vim.fn.expand('%:p')
-- end
--
-- -- Helper function to check if a file exists
-- local function file_exists(file)
--     local f = io.open(file, "r")
--     if f ~= nil then
--         io.close(f)
--         return true
--     else
--         return false
--     end
-- end
--
-- -- Case 1: Toggle between +page.svelte and +page.server.ts
-- function M.toggle_page_files()
--     local current_file = get_current_file()
--
--     -- Check if we're in a +page.svelte file
--     if current_file:match("+page%.svelte$") then
--         local server_file = current_file:gsub("+page%.svelte$", "+page.server.ts")
--         if file_exists(server_file) then
--             vim.cmd('edit ' .. server_file)
--         else
--             vim.notify("No corresponding server file found", vim.log.levels.WARN)
--         end
--     -- Check if we're in a +page.server.ts file
--     elseif current_file:match("+page%.server%.ts$") then
--         local page_file = current_file:gsub("+page%.server%.ts$", "+page.svelte")
--         if file_exists(page_file) then
--             vim.cmd('edit ' .. page_file)
--         else
--             vim.notify("No corresponding page file found", vim.log.levels.WARN)
--         end
--     else
--         vim.notify("Not in a page or server file", vim.log.levels.WARN)
--     end
-- end
--
-- -- Case 2: Jump to nearest +layout.svelte file
-- function M.find_nearest_layout()
--     local current_file = get_current_file()
--     local current_dir = vim.fn.fnamemodify(current_file, ':h')
--
--     -- Start from current directory and move up
--     while current_dir ~= '/' do
--         local layout_file = current_dir .. '/+layout.svelte'
--         if file_exists(layout_file) then
--             vim.cmd('edit ' .. layout_file)
--             return
--         end
--         current_dir = vim.fn.fnamemodify(current_dir, ':h')
--     end
--
--     vim.notify("No layout file found in parent directories", vim.log.levels.WARN)
-- end
--
-- -- Setup function to create keymaps
-- function M.setup(opts)
--     opts = opts or {}
--
--     -- Default keymaps
--     local toggle_keymap = opts.toggle_keymap or '<leader>st'  -- 's' for Svelte, 't' for toggle
--     local layout_keymap = opts.layout_keymap or '<leader>sl'  -- 's' for Svelte, 'l' for layout
--
--     -- Set up keymaps
--     vim.keymap.set('n', toggle_keymap, M.toggle_page_files, {
--         desc = "Toggle between page.svelte and page.server.ts",
--         silent = true
--     })
--
--     vim.keymap.set('n', layout_keymap, M.find_nearest_layout, {
--         desc = "Jump to nearest layout.svelte file",
--         silent = true
--     })
-- end
--
-- return M
